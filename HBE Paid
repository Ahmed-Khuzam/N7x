
local verifiedUsers = {
    "Tyoann505",
    "zxzx2026", 
    "i7_QARB"
}

local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local playerName = LocalPlayer.Name
local Mouse = LocalPlayer:GetMouse()
local currentTurnOffKey = Enum.KeyCode[_G.TurnOff:upper()] or Enum.KeyCode.Q
local currentLockTargetKey = Enum.KeyCode[_G.LockTarget:upper()] or Enum.KeyCode.R
local lockedTarget = nil
local isLocked = false

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "صانع السكربت",
    Text = "تم صنع السكربت بواسطة N7x",
    Duration = 3
})
wait(3)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "System",
    Text = "يـتـم الـتـأكـد مـن تـوثـيـقـك",
    Duration = 3
})
wait(3)

local isVerified = false
for _, username in pairs(verifiedUsers) do
    if playerName == username then
        isVerified = true
        break
    end
end

if isVerified then
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "System",
        Text = "تـم تـوثـيـقـك مـرحـبـا "..playerName.."👋🏻",
        Duration = 3
    })
    wait(3)
else
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "System",
        Text = "أنت غـيـر مـوثـق، يـجـب عـلـيـك شـراء الـتـوثـيـق مـن N7x",
        Duration = 5
    })
    wait(5)
    return
end

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "System",
    Text = "يـتـم تـحـمـيـل الـسـكـربـت...",
    Duration = 3
})
wait(3)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "System",
    Text = "يـتـم أخـتـراق الحـمـايـة...",
    Duration = 5
})
wait(5)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "System",
    Text = "تـم إخـتـراق الـحـمـايـة بـنـجـاح❕",
    Duration = 1
})

local function isValidTarget(player)
    return player and player.Character and player.Character:FindFirstChild("HumanoidRootPart")
end

local function updateKeys()
    currentTurnOffKey = Enum.KeyCode[_G.TurnOff:upper()] or Enum.KeyCode.Q
    currentLockTargetKey = Enum.KeyCode[_G.LockTarget:upper()] or Enum.KeyCode.R
end

local function getClosestPlayerToMouse()
    local closestPlayer, closestDistance = nil, math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        
        if isValidTarget(player) then
            local rootPart = player.Character.HumanoidRootPart
            local screenPos, onScreen = workspace.CurrentCamera:WorldToScreenPoint(rootPart.Position)
            
            if onScreen then
                local mousePos = Vector2.new(Mouse.X, Mouse.Y)
                local playerPos = Vector2.new(screenPos.X, screenPos.Y)
                local distance = (playerPos - mousePos).Magnitude
                
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

game:GetService('RunService').Stepped:Connect(updateKeys)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == currentTurnOffKey then
        _G.Disabled = not _G.Disabled
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "System",
            Text = "الهيت بوكس " .. (_G.Disabled and "مفعل" or "معطل"),
            Duration = 1
        })
    elseif input.KeyCode == currentLockTargetKey then
        local closest = getClosestPlayerToMouse()
        if closest then
            if not isLocked then
                lockedTarget = closest
                isLocked = true
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "System",
                    Text = "تم القفل على: " .. lockedTarget.Name,
                    Duration = 1
                })
            else
                isLocked = false
                lockedTarget = nil
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "System",
                    Text = "تم إلغاء القفل",
                    Duration = 1
                })
            end
        else
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "System",
                Text = "لا يوجد هدف صالح",
                Duration = 1
            })
        end
    end
end)

local function applyHitbox(player)
    if not _G.Disabled or player == LocalPlayer or not isValidTarget(player) then return end
    
    local character = player.Character
    character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
    character.HumanoidRootPart.Transparency = 0.5
    character.HumanoidRootPart.CanCollide = false
    if character:FindFirstChild("Head") then
        character.Head.CanCollide = false
    end
end

local function resetHitbox(player)
    if not isValidTarget(player) then return end
    
    local character = player.Character
    character.HumanoidRootPart.Size = Vector3.new(2, 2, 2)
    character.HumanoidRootPart.Transparency = 1
    character.HumanoidRootPart.CanCollide = true
    if character:FindFirstChild("Head") then
        character.Head.CanCollide = true
    end
end

local function updateHitboxes()
    if not _G.Disabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then 
                resetHitbox(player)
            end
        end
        return
    end

    if isLocked and lockedTarget and isValidTarget(lockedTarget) then
        applyHitbox(lockedTarget)
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player ~= lockedTarget then
                resetHitbox(player)
            end
        end
    else
        if _G.Target1 then
            local target = getClosestPlayerToMouse()
            if target then
                applyHitbox(target)
                for _, player in pairs(Players:GetPlayers()) do
                    if player ~= LocalPlayer and player ~= target then
                        resetHitbox(player)
                    end
                end
            end
        else
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    applyHitbox(player)
                end
            end
        end
    end
end

local function onCharacterAdded(character)
    local player = Players:GetPlayerFromCharacter(character)
    if player and player ~= LocalPlayer then
        if isLocked and player == lockedTarget then
            applyHitbox(player)
        elseif not isLocked then
            applyHitbox(player)
        end
    end
end

local function onPlayerAdded(player)
    player.CharacterAdded:Connect(onCharacterAdded)
    if player ~= LocalPlayer and player.Character then
        applyHitbox(player)
    end
end

Players.PlayerAdded:Connect(onPlayerAdded)

for _, player in pairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end

game:GetService('RunService').Heartbeat:Connect(updateHitboxes)
