local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local setNameEvent = ReplicatedStorage:WaitForChild("SetPlayerNameEvent")
local setJobEvent = ReplicatedStorage:WaitForChild("SetPlayerJobEvent")

local defaultName = "مجهول"
local defaultJob = "غير مصنف"

local firebaseURL = "https://sooncity2-default-rtdb.asia-southeast1.firebasedatabase.app/"
local secretKey = "BjGEbDgid3LOUzaCTzp2nuEYSQYPpCA4je3kAYHb"

local function getPlayerData(userId)
    local url = firebaseURL .. "Players/" .. userId .. ".json?auth=" .. secretKey
    local success, response = pcall(function() return HttpService:GetAsync(url) end)
    if success and response then return HttpService:JSONDecode(response) end
    return nil
end

local function savePlayerData(userId, data)
    local url = firebaseURL .. "Players/" .. userId .. ".json?auth=" .. secretKey
    local body = HttpService:JSONEncode(data)
    pcall(function()
        HttpService:RequestAsync({Url=url, Method="PUT", Headers={["Content-Type"]="application/json"}, Body=body})
    end)
end

local function getLastID()
    local url = firebaseURL .. "LastID.json?auth=" .. secretKey
    local success, response = pcall(function() return HttpService:GetAsync(url) end)
    if success and response then return tonumber(response) or 101 else return 101 end
end

local function setLastID(id)
    local url = firebaseURL .. "LastID.json?auth=" .. secretKey
    pcall(function()
        HttpService:RequestAsync({Url=url, Method="PUT", Headers={["Content-Type"]="application/json"}, Body=tostring(id)})
    end)
end

local function createLeaderstats(player, coins, money, kills)
    local leaderstats = player:FindFirstChild("leaderstats") or Instance.new("Folder", player)
    leaderstats.Name = "leaderstats"
    local coinsValue = leaderstats:FindFirstChild("Coins") or Instance.new("IntValue", leaderstats)
    coinsValue.Name = "Coins"
    coinsValue.Value = coins or 0
    local moneyValue = leaderstats:FindFirstChild("Money") or Instance.new("IntValue", leaderstats)
    moneyValue.Name = "Money"
    moneyValue.Value = money or 0
    local killValue = leaderstats:FindFirstChild("Kill") or Instance.new("IntValue", leaderstats)
    killValue.Name = "Kill"
    killValue.Value = kills or 0
end

local function createPlayerValues(player, name, id)
    local cardID = player:FindFirstChild("CardID") or Instance.new("IntValue", player)
    cardID.Name = "CardID"
    cardID.Value = id
    local cardName = player:FindFirstChild("CardName") or Instance.new("StringValue", player)
    cardName.Name = "CardName"
    cardName.Value = name
end

local function createPlrVars(player, jobName)
    local plrVars = player:FindFirstChild("plrVars") or Instance.new("Folder", player)
    plrVars.Name = "plrVars"
    local jobValue = plrVars:FindFirstChild("Job") or Instance.new("StringValue", plrVars)
    jobValue.Name = "Job"
    jobValue.Value = jobName or defaultJob
end

local function addNameTag(player)
    local character = player.Character
    if not character or not character:FindFirstChild("Head") then return end
    local head = character.Head
    if head:FindFirstChild("NameTag") then head.NameTag:Destroy() end
    
    local gui = Instance.new("BillboardGui", head)
    gui.Name = "NameTag"
    gui.Adornee = head
    gui.Size = UDim2.new(0,200,0,75)
    gui.StudsOffset = Vector3.new(0,3,0)
    gui.MaxDistance = 60
    gui.AlwaysOnTop = true
    
    local mainFrame = Instance.new("Frame", gui)
    mainFrame.Size = UDim2.new(1,0,1,0)
    mainFrame.BackgroundTransparency = 1
    
    local stroke = Instance.new("UIStroke", mainFrame)
    stroke.Thickness = 2
    stroke.Color = Color3.fromRGB(0,0,0)
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    
    local nameFrame = Instance.new("Frame", mainFrame)
    nameFrame.Size = UDim2.new(0.5,0,0.5,0)
    nameFrame.BackgroundTransparency = 0.6
    nameFrame.BackgroundColor3 = Color3.fromRGB(0,0,0)
    local nameLabel = Instance.new("TextLabel", nameFrame)
    nameLabel.Size = UDim2.new(1,0,1,0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextScaled = true
    nameLabel.Text = player:FindFirstChild("CardName") and player.CardName.Value or defaultName
    nameLabel.TextColor3 = Color3.new(1,1,1)
    nameLabel.TextStrokeColor3 = Color3.new(0,0,0)
    nameLabel.TextStrokeTransparency = 0
    
    local idFrame = Instance.new("Frame", mainFrame)
    idFrame.Size = UDim2.new(0.5,0,0.5,0)
    idFrame.Position = UDim2.new(0.5,0,0,0)
    idFrame.BackgroundTransparency = 0.6
    idFrame.BackgroundColor3 = Color3.fromRGB(0,0,0)
    local idLabel = Instance.new("TextLabel", idFrame)
    idLabel.Size = UDim2.new(1,0,1,0)
    idLabel.BackgroundTransparency = 1
    idLabel.TextScaled = true
    idLabel.Text = player:FindFirstChild("CardID") and player.CardID.Value or 0
    idLabel.TextColor3 = Color3.new(1,1,1)
    idLabel.TextStrokeColor3 = Color3.new(0,0,0)
    idLabel.TextStrokeTransparency = 0
    
    local jobFrame = Instance.new("Frame", mainFrame)
    jobFrame.Size = UDim2.new(1,0,0.5,0)
    jobFrame.Position = UDim2.new(0,0,0.5,0)
    jobFrame.BackgroundTransparency = 0.6
    jobFrame.BackgroundColor3 = Color3.fromRGB(0,0,0)
    local jobLabel = Instance.new("TextLabel", jobFrame)
    jobLabel.Size = UDim2.new(1,0,1,0)
    jobLabel.BackgroundTransparency = 1
    jobLabel.TextScaled = true
    local plrVars = player:FindFirstChild("plrVars")
    local jobValue = plrVars and plrVars:FindFirstChild("Job")
    jobLabel.Text = "[" .. (jobValue and jobValue.Value or defaultJob) .. "]"
    jobLabel.TextColor3 = Color3.new(1,1,1)
    jobLabel.TextStrokeColor3 = Color3.new(0,0,0)
    jobLabel.TextStrokeTransparency = 0
end

local function setupPlayer(player)
    local userId = tostring(player.UserId)
    local data = getPlayerData(userId)
    
    if data then
        createPlayerValues(player, data.Name or defaultName, data.ID or 0)
        createPlrVars(player, (data.Job == "none" or data.Job == nil) and defaultJob or data.Job)
        createLeaderstats(player, data.Coins or 0, data.Money or 0, data.Kill or 0)
    else
        local id = getLastID()
        local newData = {Name=defaultName, ID=id, ChangedName=false, Coins=0, Money=0, Kill=0, Job=defaultJob}
        savePlayerData(userId, newData)
        setLastID(id+1)
        createPlayerValues(player, defaultName, id)
        createPlrVars(player, defaultJob)
        createLeaderstats(player, 0,0,0)
    end
    
    addNameTag(player)
end

Players.PlayerAdded:Connect(function(player)
    task.spawn(function()
        setupPlayer(player)
        
        player.CharacterAdded:Connect(function(char)
            task.spawn(function()
                char:WaitForChild("HumanoidRootPart")
                char:WaitForChild("Head")
                local spawnCFrame = workspace.sp:FindFirstChild(player.Name)
                if spawnCFrame then
                    char.HumanoidRootPart.CFrame = spawnCFrame.CFrame
                end
                addNameTag(player)
            end)
        end)
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    local userId = tostring(player.UserId)
    local data = getPlayerData(userId) or {}
    data.Name = player:FindFirstChild("CardName") and player.CardName.Value or defaultName
    data.ID = player:FindFirstChild("CardID") and player.CardID.Value or 0
    data.ChangedName = data.ChangedName or false
    local leaderstats = player:FindFirstChild("leaderstats")
    if leaderstats then
        data.Coins = leaderstats:FindFirstChild("Coins") and leaderstats.Coins.Value or 0
        data.Money = leaderstats:FindFirstChild("Money") and leaderstats.Money.Value or 0
        data.Kill = leaderstats:FindFirstChild("Kill") and leaderstats.Kill.Value or 0
    end
    local plrVars = player:FindFirstChild("plrVars")
    if plrVars then
        data.Job = plrVars:FindFirstChild("Job") and plrVars.Job.Value or defaultJob
    end
    savePlayerData(userId, data)
end)

setNameEvent.OnServerEvent:Connect(function(player, newName)
    local userId = tostring(player.UserId)
    local data = getPlayerData(userId)
    if not data or data.ChangedName then return end
    data.Name = newName
    if newName ~= defaultName then data.ChangedName = true end
    savePlayerData(userId, data)
    player.CardName.Value = newName
    addNameTag(player)
end)

setJobEvent.OnServerEvent:Connect(function(player, newJob)
    local userId = tostring(player.UserId)
    local data = getPlayerData(userId)
    if not data then return end
    data.Job = (newJob == "none" or newJob == nil) and defaultJob or newJob
    savePlayerData(userId, data)
    
    local plrVars = player:FindFirstChild("plrVars") or Instance.new("Folder", player)
    plrVars.Name = "plrVars"
    local jobValue = plrVars:FindFirstChild("Job") or Instance.new("StringValue", plrVars)
    jobValue.Name = "Job"
    jobValue.Value = data.Job
    
    addNameTag(player)
end)

task.spawn(function()
    while true do
        task.wait(60)
        for _, player in ipairs(Players:GetPlayers()) do
            local userId = tostring(player.UserId)
            local data = getPlayerData(userId) or {}
            data.Name = player:FindFirstChild("CardName") and player.CardName.Value or defaultName
            data.ID = player:FindFirstChild("CardID") and player.CardID.Value or 0
            data.ChangedName = data.ChangedName or false
            local leaderstats = player:FindFirstChild("leaderstats")
            if leaderstats then
                data.Coins = leaderstats:FindFirstChild("Coins") and leaderstats.Coins.Value or 0
                data.Money = leaderstats:FindFirstChild("Money") and leaderstats.Money.Value or 0
                data.Kill = leaderstats:FindFirstChild("Kill") and leaderstats.Kill.Value or 0
            end
            local plrVars = player:FindFirstChild("plrVars")
            if plrVars then
                data.Job = plrVars:FindFirstChild("Job") and plrVars.Job.Value or defaultJob
            end
            savePlayerData(userId, data)
        end
    end
end)
